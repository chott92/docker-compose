version: '3.5'
services:
  mysql:
    image: mysql:8.0
    container_name: mysql
    volumes:
      - ${HOST_DATA_PATH}/mysql:/var/lib/mysql
    restart: always
    command: --max_allowed_packet=1073741824 --wait_timeout=28800 --default-authentication-plugin=mysql_native_password --log_bin_trust_function_creators=1
    environment:
      - MYSQL_DATABASE=${DB_NAME}
      - MYSQL_USER=simplifier
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost", "-u", "root", "--password=${DB_ROOT_PASSWORD}"]
      interval: 5s
      timeout: 2s
      retries: 0
      start_period: 5s
    networks:
      - internal-network

  mysqlinit:
    image: itizzimo/simplifier_mysqlinit:0.1.0
    container_name: mysqlinit
    volumes:
      - ./mysql:/config
    restart: on-failure:255
    command: [ "/runtime/mysqlinit", "-config", "/config/config.yaml", "-user", "root", "-pass", "${DB_ROOT_PASSWORD}", "-endpoint", "mysql:3306" ]
    depends_on:
        mysql:
          condition: service_healthy
    networks:
      - internal-network

  simplifier:
    image: simplifierag/runtime:${SIMPLIFIER_VERSION}
    container_name: simplifier
    restart: always
    volumes:
      - ${HOST_DATA_PATH}/data:/opt/simplifier/data
    environment:
      - VIRTUAL_HOST=${SIMPLIFIER_HOSTNAME}
      - DB=mysql
      - MYSQL_HOST=mysql
      - MYSQL_PORT=3306
      - MYSQL_USER=simplifier
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_DB=${DB_NAME}
      - PLUGINLIST=keyValueStorePlugin,pdfPlugin,captcha,contentRepoPlugin,jsonStore
      - SECOND_SEED=launchpad
      - MODULE_HOST=simplifier
      - SIMPLIFIER_HOST=simplifier
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.http-secure.rule=Host(`${SIMPLIFIER_HOSTNAME}`)"
      - "traefik.http.routers.http-secure.entrypoints=websecure"
      - "traefik.http.routers.http-secure.tls=true"
      - "traefik.http.routers.http-secure.middlewares=cors_header"
      - "traefik.http.middlewares.cors_header.headers.accesscontrolallowmethods=GET,OPTIONS,PUT,POST,DELETE,PATCH"
      - "traefik.http.middlewares.cors_header.headers.accesscontrolallowheaders=DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,SimplifierToken,SimplifierApp,SimplifierModule,SimplifierModuleInterface,sap-cancel-on-close,sap-contextid-accept,MaxDataServiceVersion,DataServiceVersion,Content-Length,SimplifierApiKey"
      - "traefik.http.middlewares.cors_header.headers.accesscontrolalloworiginlist=https://${SIMPLIFIER_HOSTNAME},ionic://localhost"
      - "traefik.http.middlewares.cors_header.headers.accesscontrolmaxage=1728000"
      - "traefik.http.middlewares.cors_header.headers.addvaryheader=true"
      - "traefik.http.middlewares.cors_header.headers.accessControlAllowCredentials=true"
      - "traefik.http.middlewares.cors_header.headers.accessControlExposeHeaders=remainingTokenLifetime"
    networks:
      - internal-network
      - public-network
    depends_on:
        mysqlinit:
          condition: service_completed_successfully
        mysql:
          condition: service_healthy

  launchpad:
    image: simplifierag/launchpad:${SIMPLIFIER_VERSION}
    container_name: 'launchpad'
    restart: always
    volumes:
      - ${HOST_DATA_PATH}/launchpad:/home/launchpad/storage
    environment:
      SIMPLIFIER_HOST: simplifier
      SECOND_SEED: launchpad
      MODULE_HOST: launchpad
    networks:
      - public-network
    depends_on:
        mysqlinit:
          condition: service_completed_successfully
        mysql:
          condition: service_healthy

  traefik:
    image: traefik:v2.9
    restart: always
    container_name: traefik
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /usr/share/zoneinfo:/usr/share/zoneinfo:ro
      - ${HOST_DATA_PATH}/traefik/:/configuration/
    environment:
      - TZ=Europe/Berlin
    command:
      - --entrypoints.web.address=:80
      - --entrypoints.web.http.redirections.entrypoint.to=websecure
      - --entrypoints.web.http.redirections.entrypoint.scheme=https
      - --entrypoints.web.http.redirections.entrypoint.permanent=true
      - --entrypoints.websecure.address=:443
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --providers.docker.network=public-network
      - --providers.file.directory=/configuration/
      - --providers.file.watch=true
      - --accesslog
      - --accesslog.fields.names.StartUTC=drop
    ports:
      - 80:80
      - 443:443
    networks:
      - internal-network
      - public-network

  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    command: --cleanup --schedule "0 0 0 * * *"
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

networks:
  internal-network:
    internal: true
  public-network:
